name: Build React App and Docker Image

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

env:
  DOCKER_REPOSITORY: enkidu6/trashmail

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64, linux/arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install React dependencies
        run: yarn install --frozen-lockfile
        working-directory: ./react

      - name: Build React app
        run: yarn build
        working-directory: ./react

      - name: Delete node_modules from React app
        run: rm -rf ./node_modules
        working-directory: ./react
        
      - name: Install Mailserver dependencies
        run: yarn install --frozen-lockfile
        working-directory: ./mailserver

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract platform short name
        id: platform
        run: |
          if [[ "${{ matrix.platform }}" == "linux/amd64" ]]; then
            echo "short=amd64" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.platform }}" == "linux/arm64" ]]; then
            echo "short=arm64" >> $GITHUB_OUTPUT
          fi

      - name: Get latest tag pushed
        id: tag
        uses: 32teeth/action-github-tag@v1
        with:
          # Return only the tag number (e.g., v1.0.0 -> 1.0.0)
          numbers_only: true
        
      - name: Use the latest tag pushed
        run: echo ${{steps.tag.outputs.tag}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.prod
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ${{ env.DOCKER_REPOSITORY }}:${{steps.tag.outputs.tag}}
            ${{ env.DOCKER_REPOSITORY }}:${{steps.tag.outputs.tag}}-${{ steps.platform.outputs.short }}

  merge:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Create and push Docker manifest
        run: |
          docker buildx imagetools create \
            --tag ${{ env.DOCKER_REPOSITORY }}:${{steps.tag.outputs.tag}}:latest \
            --tag ${{ env.DOCKER_REPOSITORY }}:${{steps.tag.outputs.tag}} \
            ${{ env.DOCKER_REPOSITORY }}:${{steps.tag.outputs.tag}}-amd64 \
            ${{ env.DOCKER_REPOSITORY }}:${{steps.tag.outputs.tag}}-arm64

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.DOCKER_REPOSITORY }}:${{steps.tag.outputs.tag}}:latest
          docker buildx imagetools inspect ${{ env.DOCKER_REPOSITORY }}:${{steps.tag.outputs.tag}}
